plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'org.joshi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    runtimeOnly project(":frontend")

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

task copyFrontend(type: Copy) {
    from "${rootDir}/frontend/build"
    into "${projectDir}/build/resources/main/static/."
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    destinationDir = file("${rootDir}/bin")
    archiveName = "crazy-eight.jar"
}

// Make sure frontend is actually built before backend is compiled
compileJava.dependsOn(":frontend:build")

// Copy frontend artifacts in static resources directory so that it gets packaged with final JAR
bootJar.dependsOn(copyFrontend)

